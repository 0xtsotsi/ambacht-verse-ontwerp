openapi: 3.0.3
info:
  title: Wesley's Ambacht Catering API
  description: |
    # Wesley's Ambacht Catering API

    A comprehensive REST API for managing catering bookings, quotes, availability, and add-on services for Wesley's Ambacht, a premium Dutch catering company.

    ## Features

    - **Real-time Availability Management** - Live booking slots with automatic reservation
    - **Dynamic Quote Generation** - Intelligent pricing based on service tiers and guest counts
    - **Add-on Services** - Flexible service extensions with per-person and flat-rate pricing
    - **Multi-tier Service Categories** - Essential, Premium, and Luxury tiers for different events
    - **Real-time Updates** - WebSocket subscriptions for live booking and availability updates
    - **Comprehensive Logging** - Full request/response logging with performance metrics

    ## Authentication

    This API uses Supabase Row Level Security (RLS) with JWT tokens. Include your authorization token in the `Authorization` header:

    ```
    Authorization: Bearer <your-jwt-token>
    ```

    ## Rate Limiting

    - 100 requests per minute for general endpoints
    - 500 requests per minute for availability checks
    - 50 requests per minute for booking creation

    ## Error Handling

    All endpoints return structured error responses:

    ```json
    {
      "error": {
        "code": "VALIDATION_ERROR",
        "message": "Guest count must be between 10 and 200",
        "details": {
          "field": "guest_count",
          "value": 5
        }
      }
    }
    ```

  version: 1.0.0
  contact:
    name: Wesley's Ambacht API Support
    email: api@wesleysambacht.nl
    url: https://wesleysambacht.nl
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.wesleysambacht.nl/v1
    description: Production server
  - url: https://staging-api.wesleysambacht.nl/v1
    description: Staging server

paths:
  /availability:
    get:
      summary: Get availability slots
      description: |
        Retrieve availability slots for a date range. Returns all slots with booking counts and availability status.

        **Performance**: Results are cached for 5 minutes. Use real-time subscriptions for live updates.
      operationId: getAvailabilitySlots
      tags:
        - Availability
      parameters:
        - name: start_date
          in: query
          description: Start date for availability range (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
            example: "2024-03-01"
        - name: end_date
          in: query
          description: End date for availability range (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
            example: "2024-03-31"
      responses:
        "200":
          description: Availability slots retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AvailabilitySlot"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              examples:
                success:
                  summary: Successful availability query
                  value:
                    data:
                      - id: "550e8400-e29b-41d4-a716-446655440000"
                        date: "2024-03-15"
                        time_slot: "18:00"
                        max_bookings: 3
                        current_bookings: 1
                        is_blocked: false
                        created_at: "2024-01-15T10:00:00Z"
                        updated_at: "2024-01-15T14:30:00Z"
                    meta:
                      total: 45
                      page: 1
                      per_page: 50

  /availability/check:
    post:
      summary: Check specific slot availability
      description: |
        Check if a specific date and time slot is available for booking.

        **Real-time**: This endpoint provides real-time availability status.
      operationId: checkAvailability
      tags:
        - Availability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - date
                - time
              properties:
                date:
                  type: string
                  format: date
                  description: Date to check (YYYY-MM-DD)
                  example: "2024-03-15"
                time:
                  type: string
                  pattern: "^[0-2][0-9]:[0-5][0-9]$"
                  description: Time slot to check (HH:MM)
                  example: "18:00"
      responses:
        "200":
          description: Availability status
          content:
            application/json:
              schema:
                type: object
                properties:
                  available:
                    type: boolean
                  remaining_slots:
                    type: integer
                  time_slot:
                    type: string
              example:
                available: true
                remaining_slots: 2
                time_slot: "18:00"

  /availability/slots/{date}:
    get:
      summary: Get available time slots for a specific date
      description: |
        Get all available time slots for a specific date, excluding fully booked or blocked slots.
      operationId: getAvailableTimeSlots
      tags:
        - Availability
      parameters:
        - name: date
          in: path
          required: true
          description: Date to get time slots for (YYYY-MM-DD)
          schema:
            type: string
            format: date
            example: "2024-03-15"
      responses:
        "200":
          description: Available time slots
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AvailabilitySlot"
                  grouped_slots:
                    type: object
                    properties:
                      morning:
                        type: array
                        items:
                          type: string
                      afternoon:
                        type: array
                        items:
                          type: string
                      evening:
                        type: array
                        items:
                          type: string

  /bookings:
    get:
      summary: List bookings
      description: |
        Retrieve a list of bookings with filtering and pagination options.

        **Security**: Only returns bookings accessible to the authenticated user.
      operationId: listBookings
      tags:
        - Bookings
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/LimitParam"
        - name: status
          in: query
          description: Filter by booking status
          schema:
            $ref: "#/components/schemas/BookingStatus"
        - name: service_category
          in: query
          description: Filter by service category
          schema:
            $ref: "#/components/schemas/ServiceCategory"
        - name: date_from
          in: query
          description: Filter bookings from this date
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          description: Filter bookings to this date
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Bookings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Booking"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"

    post:
      summary: Create a new booking
      description: |
        Create a new catering booking. Automatically checks availability and reserves the time slot.

        **Validation**: All fields are validated according to business rules.
        **Side Effects**: Reserves the selected time slot, sends confirmation email.
      operationId: createBooking
      tags:
        - Bookings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBookingRequest"
      responses:
        "201":
          description: Booking created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Booking"
                  message:
                    type: string
                    example: "Booking created successfully"
        "400":
          $ref: "#/components/responses/ValidationError"
        "409":
          description: Time slot no longer available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error:
                  code: "SLOT_UNAVAILABLE"
                  message: "The selected time slot is no longer available"

  /bookings/{id}:
    get:
      summary: Get booking details
      description: |
        Retrieve detailed information about a specific booking.
      operationId: getBooking
      tags:
        - Bookings
      parameters:
        - name: id
          in: path
          required: true
          description: Booking ID
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Booking details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Booking"
        "404":
          $ref: "#/components/responses/NotFound"

    patch:
      summary: Update booking status
      description: |
        Update the status of a booking. Some status changes trigger side effects.

        **Side Effects**:
        - `confirmed`: Sets confirmed_at timestamp, sends confirmation email
        - `cancelled`: Releases time slot, sets cancelled_at timestamp
      operationId: updateBookingStatus
      tags:
        - Bookings
      parameters:
        - name: id
          in: path
          required: true
          description: Booking ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  $ref: "#/components/schemas/BookingStatus"
                notes:
                  type: string
                  description: Optional notes about the status change
                  maxLength: 500
      responses:
        "200":
          description: Booking status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Booking"

  /bookings/{id}/add-ons:
    post:
      summary: Add services to booking
      description: |
        Add additional services to an existing booking. Prices are calculated automatically based on guest count.
      operationId: addBookingAddOns
      tags:
        - Bookings
      parameters:
        - name: id
          in: path
          required: true
          description: Booking ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - services
              properties:
                services:
                  type: array
                  items:
                    type: object
                    required:
                      - service_id
                    properties:
                      service_id:
                        type: string
                        format: uuid
                      quantity:
                        type: integer
                        minimum: 1
                        default: 1
      responses:
        "201":
          description: Add-on services added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/BookingAddOn"

  /quotes:
    post:
      summary: Generate a quote
      description: |
        Generate a detailed pricing quote based on service selections and guest count.

        **Business Logic**: Applies volume discounts, service tier multipliers, and add-on pricing.
      operationId: generateQuote
      tags:
        - Quotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateQuoteRequest"
      responses:
        "201":
          description: Quote generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Quote"
                  breakdown:
                    $ref: "#/components/schemas/QuoteBreakdown"

  /quotes/{id}:
    get:
      summary: Get quote details
      operationId: getQuote
      tags:
        - Quotes
      parameters:
        - name: id
          in: path
          required: true
          description: Quote ID
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Quote details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Quote"

    patch:
      summary: Update quote status
      description: |
        Update the status of a quote.

        **Side Effects**:
        - `sent`: Sets sent_at timestamp, sends quote email
        - `accepted`: Sets accepted_at timestamp, may create booking
      operationId: updateQuoteStatus
      tags:
        - Quotes
      parameters:
        - name: id
          in: path
          required: true
          description: Quote ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  $ref: "#/components/schemas/QuoteStatus"
      responses:
        "200":
          description: Quote status updated successfully

  /add-on-services:
    get:
      summary: List add-on services
      description: |
        Get all active add-on services, optionally filtered by category.

        **Caching**: Results are cached for 10 minutes.
      operationId: listAddOnServices
      tags:
        - Add-on Services
      parameters:
        - name: category
          in: query
          description: Filter by service category
          schema:
            type: string
            enum:
              [beverages, equipment, staff, entertainment, catering, logistics]
      responses:
        "200":
          description: Add-on services retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AddOnService"
                  grouped_by_category:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        $ref: "#/components/schemas/AddOnService"

  /websocket:
    get:
      summary: WebSocket connection for real-time updates
      description: |
        Establish a WebSocket connection for real-time updates on bookings and availability.

        **Channels**:
        - `availability_changes`: Live availability updates
        - `booking_{id}`: Updates for specific booking

        **Authentication**: Include JWT token in connection headers.
      tags:
        - Real-time
      responses:
        "101":
          description: WebSocket connection established

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    PageParam:
      name: page
      in: query
      description: Page number for pagination
      schema:
        type: integer
        minimum: 1
        default: 1

    LimitParam:
      name: limit
      in: query
      description: Number of items per page
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error:
              code: "NOT_FOUND"
              message: "The requested resource was not found"

    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error:
              code: "VALIDATION_ERROR"
              message: "Validation failed"
              details:
                field: "guest_count"
                value: 5
                message: "Guest count must be between 10 and 200"

    UnauthorizedError:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error:
              code: "UNAUTHORIZED"
              message: "Valid authentication required"

  schemas:
    ServiceCategory:
      type: string
      enum: [corporate, private, wedding, celebration]
      description: |
        Type of catering service:
        - `corporate`: Business events and corporate catering
        - `private`: Private parties and intimate gatherings  
        - `wedding`: Wedding ceremonies and receptions
        - `celebration`: Special celebrations and milestone events

    ServiceTier:
      type: string
      enum: [essential, premium, luxury]
      description: |
        Service level tiers:
        - `essential`: Basic service package with quality essentials
        - `premium`: Enhanced service with premium options
        - `luxury`: Top-tier service with luxury amenities

    BookingStatus:
      type: string
      enum: [pending, confirmed, cancelled, completed]
      description: |
        Booking status lifecycle:
        - `pending`: Initial booking, awaiting confirmation
        - `confirmed`: Booking confirmed and scheduled
        - `cancelled`: Booking cancelled (releases time slot)
        - `completed`: Event completed successfully

    QuoteStatus:
      type: string
      enum: [draft, sent, accepted, rejected, expired]
      description: |
        Quote status lifecycle:
        - `draft`: Quote created but not sent
        - `sent`: Quote sent to customer
        - `accepted`: Customer accepted the quote
        - `rejected`: Customer rejected the quote  
        - `expired`: Quote validity period expired

    AvailabilitySlot:
      type: object
      required:
        - id
        - date
        - time_slot
        - max_bookings
        - current_bookings
        - is_blocked
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        date:
          type: string
          format: date
          description: Date of the availability slot
        time_slot:
          type: string
          pattern: "^[0-2][0-9]:[0-5][0-9]$"
          description: Time slot in HH:MM format
        max_bookings:
          type: integer
          minimum: 1
          description: Maximum number of concurrent bookings allowed
        current_bookings:
          type: integer
          minimum: 0
          description: Current number of bookings for this slot
        is_blocked:
          type: boolean
          description: Whether this slot is manually blocked
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: "550e8400-e29b-41d4-a716-446655440000"
        date: "2024-03-15"
        time_slot: "18:00"
        max_bookings: 3
        current_bookings: 1
        is_blocked: false
        created_at: "2024-01-15T10:00:00Z"
        updated_at: "2024-01-15T14:30:00Z"

    Booking:
      type: object
      required:
        - id
        - customer_name
        - customer_email
        - event_date
        - event_time
        - guest_count
        - service_category
        - service_tier
        - status
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        customer_name:
          type: string
          maxLength: 100
          description: Full name of the customer
        customer_email:
          type: string
          format: email
          maxLength: 254
          description: Customer's email address
        customer_phone:
          type: string
          maxLength: 20
          nullable: true
          description: Customer's phone number
        company_name:
          type: string
          maxLength: 100
          nullable: true
          description: Company name for corporate events
        event_date:
          type: string
          format: date
          description: Date of the event
        event_time:
          type: string
          pattern: "^[0-2][0-9]:[0-5][0-9]$"
          description: Start time of the event
        guest_count:
          type: integer
          minimum: 10
          maximum: 500
          description: Number of guests expected
        service_category:
          $ref: "#/components/schemas/ServiceCategory"
        service_tier:
          $ref: "#/components/schemas/ServiceTier"
        status:
          $ref: "#/components/schemas/BookingStatus"
        special_requests:
          type: string
          maxLength: 1000
          nullable: true
          description: Any special requests or notes
        dietary_restrictions:
          type: string
          maxLength: 500
          nullable: true
          description: Dietary restrictions or allergies
        estimated_total:
          type: number
          format: float
          minimum: 0
          nullable: true
          description: Estimated total cost in EUR
        final_total:
          type: number
          format: float
          minimum: 0
          nullable: true
          description: Final confirmed total cost in EUR
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        confirmed_at:
          type: string
          format: date-time
          nullable: true
        cancelled_at:
          type: string
          format: date-time
          nullable: true

    CreateBookingRequest:
      type: object
      required:
        - customer_name
        - customer_email
        - event_date
        - event_time
        - guest_count
        - service_category
      properties:
        customer_name:
          type: string
          maxLength: 100
          minLength: 2
          example: "Jan van der Berg"
        customer_email:
          type: string
          format: email
          maxLength: 254
          example: "jan@example.com"
        customer_phone:
          type: string
          maxLength: 20
          pattern: '^[+]?[0-9\s\-\(\)]{10,}$'
          example: "+31 6 12345678"
        company_name:
          type: string
          maxLength: 100
          example: "ABC Consulting B.V."
        event_date:
          type: string
          format: date
          description: Must be in the future
          example: "2024-03-15"
        event_time:
          type: string
          pattern: "^[0-2][0-9]:[0-5][0-9]$"
          example: "18:00"
        guest_count:
          type: integer
          minimum: 10
          maximum: 500
          example: 25
        service_category:
          $ref: "#/components/schemas/ServiceCategory"
        service_tier:
          $ref: "#/components/schemas/ServiceTier"
          default: "premium"
        special_requests:
          type: string
          maxLength: 1000
          example: "Vegetarian options preferred, outdoor seating if weather permits"
        dietary_restrictions:
          type: string
          maxLength: 500
          example: "2 guests with nut allergies, 1 vegan"
        selected_add_ons:
          type: array
          items:
            type: string
            format: uuid
          description: Array of add-on service IDs

    Quote:
      type: object
      required:
        - id
        - service_details
        - pricing_breakdown
        - total_amount
        - status
        - valid_until
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        booking_id:
          type: string
          format: uuid
          nullable: true
          description: Associated booking ID if quote was accepted
        service_details:
          type: object
          description: Detailed breakdown of requested services
        pricing_breakdown:
          type: object
          description: Detailed pricing calculation
        total_amount:
          type: number
          format: float
          minimum: 0
          description: Total quote amount in EUR
        status:
          $ref: "#/components/schemas/QuoteStatus"
        valid_until:
          type: string
          format: date
          description: Quote expiration date
        selected_add_ons:
          type: array
          items:
            type: string
          description: Selected add-on service IDs
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        sent_at:
          type: string
          format: date-time
          nullable: true
        accepted_at:
          type: string
          format: date-time
          nullable: true

    CreateQuoteRequest:
      type: object
      required:
        - service_category
        - service_tier
        - guest_count
      properties:
        booking_id:
          type: string
          format: uuid
          description: Associate quote with existing booking
        service_category:
          $ref: "#/components/schemas/ServiceCategory"
        service_tier:
          $ref: "#/components/schemas/ServiceTier"
        guest_count:
          type: integer
          minimum: 10
          maximum: 500
        event_date:
          type: string
          format: date
          description: Event date for seasonal pricing
        selected_add_ons:
          type: array
          items:
            type: string
            format: uuid
          description: Add-on service IDs to include
        custom_notes:
          type: string
          maxLength: 500
          description: Special requirements or notes

    QuoteBreakdown:
      type: object
      properties:
        base_price:
          type: number
          format: float
          description: Base service price
        base_price_per_person:
          type: number
          format: float
          description: Base price per guest
        tier_multiplier:
          type: number
          format: float
          description: Service tier pricing multiplier
        subtotal:
          type: number
          format: float
          description: Subtotal before discounts
        add_ons:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              price_per_person:
                type: number
                format: float
                nullable: true
              flat_rate:
                type: number
                format: float
                nullable: true
              total:
                type: number
                format: float
        add_ons_total:
          type: number
          format: float
          description: Total cost of all add-ons
        volume_discount:
          type: object
          nullable: true
          properties:
            min_guests:
              type: integer
            discount:
              type: number
              format: float
            discount_amount:
              type: number
              format: float
            label:
              type: string
        final_total:
          type: number
          format: float
          description: Final total after all discounts
        price_per_person:
          type: number
          format: float
          description: Final price per guest

    AddOnService:
      type: object
      required:
        - id
        - name
        - category
        - is_active
        - created_at
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 100
          description: Service name
        description:
          type: string
          maxLength: 500
          nullable: true
          description: Detailed service description
        category:
          type: string
          enum:
            [beverages, equipment, staff, entertainment, catering, logistics]
          description: Service category
        price_per_person:
          type: number
          format: float
          minimum: 0
          nullable: true
          description: Per-person pricing (mutually exclusive with flat_rate)
        flat_rate:
          type: number
          format: float
          minimum: 0
          nullable: true
          description: Flat rate pricing (mutually exclusive with price_per_person)
        is_active:
          type: boolean
          description: Whether service is currently available
        created_at:
          type: string
          format: date-time

    BookingAddOn:
      type: object
      required:
        - id
        - booking_id
        - add_on_service_id
        - quantity
        - calculated_price
        - created_at
      properties:
        id:
          type: string
          format: uuid
        booking_id:
          type: string
          format: uuid
        add_on_service_id:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 1
          description: Quantity of this service
        calculated_price:
          type: number
          format: float
          minimum: 0
          description: Calculated price based on booking guest count
        created_at:
          type: string
          format: date-time

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Machine-readable error code
            message:
              type: string
              description: Human-readable error message
            details:
              type: object
              description: Additional error details
              additionalProperties: true

    PaginationMeta:
      type: object
      properties:
        total:
          type: integer
          description: Total number of items
        page:
          type: integer
          description: Current page number
        per_page:
          type: integer
          description: Items per page
        total_pages:
          type: integer
          description: Total number of pages
        has_next:
          type: boolean
          description: Whether there are more pages
        has_prev:
          type: boolean
          description: Whether there are previous pages

security:
  - BearerAuth: []

tags:
  - name: Availability
    description: |
      Manage booking availability and time slots.

      Real-time availability management with automatic slot reservation
      and release functionality.
  - name: Bookings
    description: |
      Create and manage catering bookings.

      Complete booking lifecycle from creation to completion,
      with status tracking and add-on service management.
  - name: Quotes
    description: |
      Generate and manage pricing quotes.

      Dynamic pricing with service tier multipliers, volume discounts,
      and comprehensive breakdown calculations.
  - name: Add-on Services
    description: |
      Additional services that can be added to bookings.

      Flexible pricing model supporting both per-person and flat-rate charges.
  - name: Real-time
    description: |
      WebSocket connections for live updates.

      Real-time notifications for availability changes and booking updates.

externalDocs:
  description: Wesley's Ambacht Developer Portal
  url: https://developers.wesleysambacht.nl
