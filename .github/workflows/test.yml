name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        include:
          - browser: chromium
            name: Chrome
          - browser: firefox
            name: Firefox
          - browser: webkit
            name: Safari

    name: E2E Tests - ${{ matrix.name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.browser }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30

      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-videos-${{ matrix.browser }}
          path: test-results/
          retention-days: 7

  mobile-test:
    runs-on: ubuntu-latest
    name: E2E Tests - Mobile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run mobile tests
        run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari"

      - name: Upload mobile test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-mobile
          path: playwright-report/
          retention-days: 30

  visual-regression:
    runs-on: ubuntu-latest
    name: Visual Regression Tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run visual regression tests
        run: npx playwright test --grep "Visual Regression"

      - name: Upload visual regression results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-diff
          path: |
            test-results/
            playwright-report/
          retention-days: 30

      - name: Comment PR with visual changes
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Check if there are visual differences
            const testResultsPath = './test-results';
            if (fs.existsSync(testResultsPath)) {
              const comment = `## 🖼️ Visual Regression Detected
              
              Visual changes were detected in the floating booking widget. 
              Please review the artifacts to ensure these changes are intentional.
              
              [View Test Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

  accessibility-test:
    runs-on: ubuntu-latest
    name: Accessibility Tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Install additional accessibility testing tools
        run: npm install --save-dev @axe-core/playwright

      - name: Run accessibility tests
        run: npx playwright test tests/accessibility.spec.ts --project=chromium

      - name: Upload accessibility results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: playwright-report/
          retention-days: 30

  test-summary:
    runs-on: ubuntu-latest
    needs: [test, mobile-test, visual-regression, accessibility-test]
    if: always()
    name: Test Summary

    steps:
      - name: Create test summary
        uses: actions/github-script@v7
        with:
          script: |
            const jobs = ${{ toJson(needs) }};
            let summary = '## 🧪 Test Results Summary\n\n';

            const statusEmoji = {
              'success': '✅',
              'failure': '❌',
              'cancelled': '⚠️',
              'skipped': '⏭️'
            };

            summary += '| Test Suite | Status |\n';
            summary += '|------------|--------|\n';

            for (const [job, data] of Object.entries(jobs)) {
              const emoji = statusEmoji[data.result] || '❓';
              const jobName = job.split('-').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join(' ');
              summary += `| ${jobName} | ${emoji} ${data.result} |\n`;
            }

            summary += '\n### Next Steps\n';

            if (Object.values(jobs).every(j => j.result === 'success')) {
              summary += '✅ All tests passed! The floating booking widget is working correctly.\n';
              summary += '- Ready for deployment\n';
              summary += '- Consider running performance tests\n';
            } else {
              summary += '❌ Some tests failed. Please review the failures:\n';
              summary += '- Check the test artifacts for detailed results\n';
              summary += '- Fix any issues before merging\n';
              summary += '- Re-run tests after fixes\n';
            }

            await core.summary.addRaw(summary).write();
