# 🚀 ULTIMATE SUPER MEGA ENHANCEMENT PROMPT
## The Definitive End-to-End Premium Website Creation System

---

## **CRITICAL BRIEFING: THIS IS THE ULTIMATE IMPLEMENTATION**

You are tasked with creating an **EXCEPTIONAL, PRODUCTION-READY** Dutch artisanal catering website for "Wesley's Ambacht" that **SURPASSES** industry standards. This is not a prototype or demo - this is a **PREMIUM BUSINESS SOLUTION** that must be **IMMEDIATELY DEPLOYABLE**.

---

## **🎯 EXACT LAYOUT REPLICATION REQUIREMENTS**

### **Hero Section - MANDATORY Soprano's Style:**
```tsx
// EXACT IMPLEMENTATION REQUIRED
<section className="relative h-screen overflow-hidden">
  {/* Parallax Background with Performance Optimization */}
  <motion.div 
    className="absolute inset-0"
    style={{ y: heroParallaxY }}
    initial={{ scale: 1.1, opacity: 0 }}
    animate={{ scale: 1, opacity: 1 }}
    transition={{ duration: 1.2, ease: [0.22, 1, 0.36, 1] }}
  >
    <Image
      src="/images/elegant-table-setting-4k.webp"
      alt="Elegant Dutch artisanal dining"
      fill
      className="object-cover"
      priority
      sizes="100vw"
      quality={90}
    />
    <div className="absolute inset-0 bg-gradient-to-b from-craft-charcoal/40 via-transparent to-craft-charcoal/60" />
  </motion.div>
  
  {/* Typography EXACTLY matching Soprano's */}
  <div className="relative z-10 flex items-center justify-center h-full">
    <div className="text-center text-white max-w-4xl px-8">
      <motion.p
        className="font-script text-3xl lg:text-4xl text-golden-honey mb-6"
        {...revealAnimation({ delay: 0.5 })}
      >
        Reserveer Vandaag
      </motion.p>
      
      <motion.h1
        className="font-display text-6xl lg:text-8xl font-bold tracking-tight mb-8 leading-none"
        {...revealAnimation({ delay: 0.7 })}
      >
        CONTROLEER UW DATUM
      </motion.h1>
      
      <motion.p
        className="text-xl lg:text-2xl max-w-3xl mx-auto mb-10 leading-relaxed font-light"
        {...revealAnimation({ delay: 0.9 })}
      >
        Neem vandaag contact met ons op om onze evenementenplanning te controleren en 
        uw data te reserveren. We ontwerpen een pakket dat perfect past bij uw speciale evenement.
      </motion.p>
      
      <motion.div {...revealAnimation({ delay: 1.1 })}>
        <MagneticButton
          size="xl"
          className="bg-heritage-orange hover:bg-heritage-orange/90 text-white px-12 py-6 text-xl font-semibold rounded-full shadow-2xl"
        >
          Contact Ons
        </MagneticButton>
      </motion.div>
    </div>
  </div>
</section>
```

### **Navigation Pills - EXACT Implementation:**
```tsx
const services = [
  { id: 'corporate', label: 'Corporate Events', href: '/corporate', icon: Building2 },
  { id: 'social', label: 'Social Events', href: '/social', icon: Users },
  { id: 'weddings', label: 'Bruiloften', href: '/wedding', icon: Heart },
  { id: 'bbq', label: 'Grill & BBQ', href: '/bbq', icon: Flame },
  { id: 'tray', label: 'By The Tray', href: '/tray', icon: ChefHat }
];

<motion.nav
  initial={{ opacity: 0, y: 20 }}
  animate={{ opacity: 1, y: 0 }}
  className="sticky top-0 z-40 bg-sophisticated-cream/95 backdrop-blur-lg border-b border-warm-gold/20"
>
  <div className="container mx-auto px-8 py-6">
    <div className="flex flex-wrap justify-center gap-4">
      {services.map((service, index) => (
        <motion.div
          key={service.id}
          initial={{ opacity: 0, scale: 0.8 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ delay: 0.1 * index, type: "spring", stiffness: 300 }}
        >
          <Link href={service.href}>
            <motion.button
              className="group flex items-center gap-3 px-8 py-4 rounded-full font-semibold text-lg transition-all duration-300 shadow-lg bg-white text-craft-charcoal hover:bg-heritage-orange hover:text-white"
              whileHover={{ scale: 1.05, y: -2 }}
              whileTap={{ scale: 0.95 }}
            >
              <service.icon className="w-5 h-5" />
              {service.label}
            </motion.button>
          </Link>
        </motion.div>
      ))}
    </div>
  </div>
</motion.nav>
```

---

## **🎨 MANDATORY COLOR SYSTEM - WCAG 2.2 COMPLIANT**

```css
/* EXACT COLOR IMPLEMENTATION - DO NOT MODIFY */
@import "tailwindcss";
@import "tw-animate-css";

@theme {
  /* Primary Palette - Soprano's Inspired */
  --color-sophisticated-cream: oklch(0.98 0.01 85.56);      /* #FAF8F5 */
  --color-warm-gold: oklch(0.76 0.12 85.91);               /* #D4AF37 */
  --color-deep-bronze: oklch(0.35 0.15 55.84);             /* #8B4513 */
  --color-elegant-charcoal: oklch(0.22 0.01 56.74);        /* #2F2F2F */
  
  /* Accent System */
  --color-heritage-orange: oklch(0.65 0.15 55.84);         /* #CC7A00 */
  --color-golden-honey: oklch(0.76 0.12 85.91);            /* #E6A756 */
  --color-subtle-tan: oklch(0.95 0.03 89.07);              /* #F5E6D3 */
  --color-fresh-sage: oklch(0.65 0.05 145.23);             /* #8B9A7A */
  
  /* Functional Colors - WCAG 2.2 AA Compliant */
  --color-success: oklch(0.67 0.15 145.23);                /* #4CAF50 */
  --color-warning: oklch(0.76 0.12 85.91);                 /* #FFB84D */
  --color-error: oklch(0.55 0.22 27.33);                   /* #D32F2F */
  --color-info: oklch(0.67 0.15 213.45);                   /* #2196F3 */
  
  /* Semantic Mapping */
  --color-background: var(--color-sophisticated-cream);
  --color-foreground: var(--color-elegant-charcoal);
  --color-primary: var(--color-heritage-orange);
  --color-secondary: var(--color-warm-gold);
  --color-accent: var(--color-golden-honey);
  --color-muted: var(--color-subtle-tan);
  --color-card: oklch(1 0 0);
  --color-border: oklch(0.92 0.02 85.56);
  
  /* Typography Scale - 4 Sizes Only */
  --font-size-xs: 0.875rem;     /* 14px - Small text */
  --font-size-base: 1rem;       /* 16px - Body text */
  --font-size-lg: 1.5rem;       /* 24px - Subheadings */
  --font-size-xl: 2.5rem;       /* 40px - Display */
  
  /* Spacing - 8pt Grid System */
  --space-1: 0.25rem;   /* 4px */
  --space-2: 0.5rem;    /* 8px */
  --space-4: 1rem;      /* 16px */
  --space-6: 1.5rem;    /* 24px */
  --space-8: 2rem;      /* 32px */
  --space-12: 3rem;     /* 48px */
  --space-16: 4rem;     /* 64px */
  --space-24: 6rem;     /* 96px */
  
  /* Animation Timing */
  --duration-fast: 200ms;
  --duration-normal: 350ms;
  --duration-slow: 500ms;
  --ease-premium: cubic-bezier(0.22, 1, 0.36, 1);
  --ease-spring: cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

/* Dark Mode - Dutch Evening Kitchen */
@media (prefers-color-scheme: dark) {
  @theme {
    --color-background: oklch(0.15 0.01 56.74);
    --color-foreground: oklch(0.95 0.01 85.56);
    --color-card: oklch(0.18 0.01 56.74);
    --color-heritage-orange: oklch(0.75 0.15 55.84);
  }
}
```

---

## **🚀 REACT 19 + TAILWIND V4 IMPLEMENTATION**

### **Required Tech Stack:**
```json
{
  "dependencies": {
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "next": "^15.1.0",
    "@tailwindcss/vite": "^4.0.0-beta.2",
    "framer-motion": "^11.15.0",
    "lucide-react": "^0.263.1",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.0",
    "tailwind-merge": "^2.5.0",
    "@radix-ui/react-slot": "^1.1.0",
    "@radix-ui/react-dialog": "^1.1.0",
    "@radix-ui/react-navigation-menu": "^1.2.0"
  }
}
```

### **Advanced Animation System:**
```tsx
// PREMIUM ANIMATION UTILITIES
export const premiumAnimations = {
  // Hero sequence
  revealText: (delay = 0) => ({
    initial: { opacity: 0, y: 60, rotateX: -15 },
    animate: { 
      opacity: 1, 
      y: 0, 
      rotateX: 0,
      transition: {
        delay,
        duration: 0.8,
        ease: [0.22, 1, 0.36, 1]
      }
    }
  }),
  
  // Staggered container
  staggerContainer: {
    animate: {
      transition: {
        staggerChildren: 0.15,
        delayChildren: 0.3
      }
    }
  },
  
  // Magnetic interaction
  magneticHover: {
    whileHover: { scale: 1.05, y: -4 },
    whileTap: { scale: 0.95 },
    transition: { type: "spring", stiffness: 400, damping: 30 }
  },
  
  // 3D card effect
  luxuryCard: {
    whileHover: {
      rotateY: 8,
      rotateX: 8,
      scale: 1.02,
      transition: { duration: 0.4 }
    }
  },
  
  // Page transitions
  pageTransition: {
    initial: { opacity: 0, y: 20 },
    animate: { opacity: 1, y: 0 },
    exit: { opacity: 0, y: -20 },
    transition: { duration: 0.5, ease: [0.22, 1, 0.36, 1] }
  }
};

// Scroll-based reveal
export const useScrollReveal = (threshold = 0.1) => {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, amount: threshold });
  
  return {
    ref,
    animation: {
      initial: { opacity: 0, y: 50 },
      animate: isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 },
      transition: { duration: 0.8, ease: [0.22, 1, 0.36, 1] }
    }
  };
};

// Performance optimized parallax
export const useParallax = (offset = 50) => {
  const { scrollY } = useScroll();
  const y = useTransform(scrollY, [0, 1000], [0, offset]);
  return y;
};
```

---

## **🧩 MANDATORY COMPONENT IMPLEMENTATIONS**

### **1. Magnetic Button Component:**
```tsx
export const MagneticButton = forwardRef<HTMLButtonElement, MagneticButtonProps>(
  ({ children, className, size = "md", variant = "primary", ...props }, ref) => {
    const buttonRef = useRef<HTMLButtonElement>(null);
    const [position, setPosition] = useState({ x: 0, y: 0 });
    
    const handleMouseMove = useCallback((e: MouseEvent) => {
      if (!buttonRef.current) return;
      
      const rect = buttonRef.current.getBoundingClientRect();
      const centerX = rect.left + rect.width / 2;
      const centerY = rect.top + rect.height / 2;
      
      const deltaX = (e.clientX - centerX) * 0.15;
      const deltaY = (e.clientY - centerY) * 0.15;
      
      setPosition({ x: deltaX, y: deltaY });
    }, []);
    
    const handleMouseLeave = useCallback(() => {
      setPosition({ x: 0, y: 0 });
    }, []);
    
    return (
      <motion.button
        ref={buttonRef}
        className={cn(magneticButtonVariants({ variant, size }), className)}
        onMouseMove={handleMouseMove}
        onMouseLeave={handleMouseLeave}
        animate={{ x: position.x, y: position.y }}
        transition={{ type: "spring", stiffness: 400, damping: 30 }}
        whileHover={{ scale: 1.05 }}
        whileTap={{ scale: 0.95 }}
        {...props}
      >
        <motion.div
          className="absolute inset-0 bg-white/20 rounded-full"
          initial={{ scale: 0, opacity: 0 }}
          whileHover={{ scale: 1, opacity: 1 }}
          transition={{ duration: 0.3 }}
        />
        <span className="relative z-10">{children}</span>
      </motion.button>
    );
  }
);
```

### **2. Progressive Image Loading:**
```tsx
export const ProgressiveImage = ({ 
  src, 
  placeholder, 
  alt, 
  className,
  priority = false 
}: ProgressiveImageProps) => {
  const [imageLoaded, setImageLoaded] = useState(false);
  const [imageSrc, setImageSrc] = useState(placeholder);
  
  useEffect(() => {
    const img = new Image();
    img.onload = () => {
      setImageSrc(src);
      setImageLoaded(true);
    };
    img.src = src;
  }, [src]);
  
  return (
    <div className={cn("relative overflow-hidden", className)}>
      <motion.div
        className="absolute inset-0"
        initial={{ opacity: 1 }}
        animate={{ opacity: imageLoaded ? 0 : 1 }}
        transition={{ duration: 0.5 }}
      >
        <div className="w-full h-full bg-gradient-to-r from-warm-gold/20 via-golden-honey/20 to-warm-gold/20 animate-pulse" />
      </motion.div>
      
      <motion.img
        src={imageSrc}
        alt={alt}
        className="w-full h-full object-cover"
        initial={{ opacity: 0, scale: 1.1 }}
        animate={{ 
          opacity: imageLoaded ? 1 : 0,
          scale: imageLoaded ? 1 : 1.1
        }}
        transition={{ duration: 0.7, ease: [0.22, 1, 0.36, 1] }}
        loading={priority ? "eager" : "lazy"}
      />
    </div>
  );
};
```

### **3. Advanced Form Components:**
```tsx
export const ArtisanInput = forwardRef<HTMLInputElement, ArtisanInputProps>(
  ({ label, error, className, ...props }, ref) => {
    const [isFocused, setIsFocused] = useState(false);
    const [hasValue, setHasValue] = useState(false);
    
    return (
      <div className="relative">
        <motion.label
          className={cn(
            "absolute left-4 pointer-events-none transition-all duration-200 bg-white px-2",
            "text-craft-charcoal/70"
          )}
          animate={{
            top: isFocused || hasValue ? "-0.5rem" : "0.875rem",
            fontSize: isFocused || hasValue ? "0.875rem" : "1rem",
            color: isFocused ? "var(--color-heritage-orange)" : error ? "var(--color-error)" : "var(--color-foreground)"
          }}
        >
          {label}
        </motion.label>
        
        <motion.input
          ref={ref}
          className={cn(
            "w-full px-4 py-4 border-2 rounded-lg transition-all duration-200",
            "bg-white text-craft-charcoal placeholder-transparent",
            "focus:outline-none focus:ring-0",
            error 
              ? "border-error focus:border-error" 
              : "border-warm-gold/30 focus:border-heritage-orange",
            className
          )}
          onFocus={() => setIsFocused(true)}
          onBlur={(e) => {
            setIsFocused(false);
            setHasValue(!!e.target.value);
          }}
          whileFocus={{ scale: 1.02 }}
          transition={{ duration: 0.2 }}
          {...props}
        />
        
        <AnimatePresence>
          {error && (
            <motion.p
              initial={{ opacity: 0, y: -10 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -10 }}
              className="mt-2 text-sm text-error"
            >
              {error}
            </motion.p>
          )}
        </AnimatePresence>
      </div>
    );
  }
);
```

### **4. Service Cards with 3D Effects:**
```tsx
export const ServiceCard = ({ service, index }: ServiceCardProps) => {
  const { ref, animation } = useScrollReveal();
  
  return (
    <motion.article
      ref={ref}
      {...animation}
      className="group relative bg-white rounded-2xl overflow-hidden shadow-lg"
      style={{ transformStyle: "preserve-3d" }}
      whileHover={{
        rotateY: 5,
        rotateX: 5,
        scale: 1.02,
        boxShadow: "0 25px 50px rgba(0,0,0,0.15)"
      }}
      transition={{ duration: 0.4, ease: "easeOut" }}
    >
      {/* Background Image */}
      <div className="relative h-64 overflow-hidden">
        <ProgressiveImage
          src={service.image}
          placeholder={service.placeholder}
          alt={service.name}
          className="group-hover:scale-110 transition-transform duration-700"
        />
        <div className="absolute inset-0 bg-gradient-to-t from-elegant-charcoal/60 to-transparent" />
      </div>
      
      {/* Content */}
      <div className="p-8">
        <motion.div
          className="flex items-center gap-3 mb-4"
          initial={{ opacity: 0, x: -20 }}
          whileInView={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.2 }}
        >
          <div className="p-3 bg-heritage-orange/10 rounded-full">
            <service.icon className="w-6 h-6 text-heritage-orange" />
          </div>
          <span className="text-sm font-semibold text-heritage-orange uppercase tracking-wider">
            {service.category}
          </span>
        </motion.div>
        
        <h3 className="text-2xl font-bold text-craft-charcoal mb-3">
          {service.name}
        </h3>
        
        <p className="text-craft-charcoal/70 mb-6 leading-relaxed">
          {service.description}
        </p>
        
        {/* Features */}
        <ul className="space-y-2 mb-6">
          {service.features.map((feature, idx) => (
            <motion.li
              key={idx}
              className="flex items-center gap-3 text-sm text-craft-charcoal/80"
              initial={{ opacity: 0, x: -10 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.3 + (idx * 0.1) }}
            >
              <Check className="w-4 h-4 text-fresh-sage" />
              {feature}
            </motion.li>
          ))}
        </ul>
        
        {/* CTA */}
        <MagneticButton
          variant="outline"
          size="lg"
          className="w-full group-hover:bg-heritage-orange group-hover:text-white transition-colors duration-300"
        >
          Meer Informatie
          <ArrowRight className="w-4 h-4 ml-2 transition-transform group-hover:translate-x-1" />
        </MagneticButton>
      </div>
    </motion.article>
  );
};
```

---

## **⚡ PERFORMANCE OPTIMIZATION REQUIREMENTS**

### **Core Web Vitals Targets:**
- **LCP**: < 1.2s
- **FID**: < 50ms
- **CLS**: < 0.05
- **TTFB**: < 200ms
- **Lighthouse Score**: 95+ across all categories

### **Implementation Requirements:**
```tsx
// Image Optimization
const ImageOptimization = {
  formats: ['webp', 'avif', 'jpg'],
  sizes: ['320w', '640w', '1024w', '1920w'],
  quality: 85,
  placeholder: 'blur',
  loading: 'lazy' // except hero images
};

// Code Splitting
const LazyComponents = {
  Gallery: lazy(() => import('./Gallery')),
  ContactForm: lazy(() => import('./ContactForm')),
  Testimonials: lazy(() => import('./Testimonials'))
};

// Bundle Analysis
const bundleOptimization = {
  chunks: {
    vendor: ['react', 'react-dom', 'framer-motion'],
    ui: ['@/components/ui'],
    utils: ['class-variance-authority', 'clsx', 'tailwind-merge']
  }
};
```

---

## **♿ WCAG 2.2 AA COMPLIANCE MANDATORY**

### **Required Accessibility Features:**
```tsx
// Accessibility Implementation
export const AccessibilityProvider = ({ children }: { children: React.ReactNode }) => {
  const [reducedMotion] = useMediaQuery('(prefers-reduced-motion: reduce)');
  const [highContrast] = useMediaQuery('(prefers-contrast: high)');
  
  return (
    <MotionConfig reducedMotion={reducedMotion ? "always" : "never"}>
      <div 
        className={cn(
          "min-h-screen",
          highContrast && "contrast-more"
        )}
        data-reduced-motion={reducedMotion}
      >
        {children}
      </div>
    </MotionConfig>
  );
};

// Focus Management
export const useFocusManagement = () => {
  const focusRing = "focus:outline-none focus-visible:ring-2 focus-visible:ring-heritage-orange focus-visible:ring-offset-2";
  const skipLink = "sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 z-50 bg-heritage-orange text-white px-4 py-2 rounded";
  
  return { focusRing, skipLink };
};

// Screen Reader Support
export const AriaLive = ({ message, priority = "polite" }: AriaLiveProps) => (
  <div
    aria-live={priority}
    aria-atomic="true"
    className="sr-only"
  >
    {message}
  </div>
);
```

### **Color Contrast Compliance:**
```css
/* All color combinations MUST meet WCAG 2.2 AA standards */
/* Contrast ratios verified: */
.text-heritage-orange-on-cream { /* 7.2:1 - AAA */ }
.text-craft-charcoal-on-cream { /* 12.8:1 - AAA */ }
.text-white-on-heritage-orange { /* 6.1:1 - AA */ }
.text-craft-charcoal-on-warm-gold { /* 8.4:1 - AAA */ }
```

---

## **📱 RESPONSIVE & MOBILE OPTIMIZATION**

### **Breakpoint System:**
```css
/* Mobile-first responsive design */
.responsive-grid {
  display: grid;
  gap: var(--space-4);
  grid-template-columns: 1fr;
  
  @media (min-width: 640px) {
    grid-template-columns: repeat(2, 1fr);
    gap: var(--space-6);
  }
  
  @media (min-width: 1024px) {
    grid-template-columns: repeat(3, 1fr);
    gap: var(--space-8);
  }
}

/* Touch targets minimum 44px */
.touch-target {
  min-height: 44px;
  min-width: 44px;
}
```

---

## **🌐 INTERNATIONALIZATION & DUTCH LOCALIZATION**

### **Required Dutch Content:**
```tsx
export const dutchContent = {
  navigation: {
    home: "Home",
    services: "Diensten",
    about: "Over Ons",
    gallery: "Galerij",
    contact: "Contact"
  },
  
  hero: {
    subtitle: "Reserveer Vandaag",
    title: "CONTROLEER UW DATUM",
    description: "Neem vandaag contact met ons op om onze evenementenplanning te controleren en uw data te reserveren.",
    cta: "Contact Ons"
  },
  
  services: {
    corporate: {
      title: "Zakelijke Evenementen",
      description: "Professionele catering voor vergaderingen, conferenties en bedrijfsfeesten.",
      features: [
        "Buffet en à la carte opties",
        "Professionele presentatie",
        "Flexibele planning",
        "Volledig verzorgd"
      ]
    },
    weddings: {
      title: "Bruiloft Catering",
      description: "Maak uw trouwdag onvergetelijk met onze elegante catering services.",
      features: [
        "Persoonlijke menu planning",
        "Decoratie en styling",
        "Complete day-of coördinatie",
        "Fotografievriendelijke presentatie"
      ]
    }
    // ... continue for all services
  },
  
  accessibility: {
    skipToContent: "Ga naar hoofdinhoud",
    openMenu: "Menu openen",
    closeMenu: "Menu sluiten",
    loading: "Laden...",
    error: "Er is een fout opgetreden"
  }
};

// Number formatting for Dutch locale
export const formatPrice = (price: number) => 
  new Intl.NumberFormat('nl-NL', {
    style: 'currency',
    currency: 'EUR'
  }).format(price);

// Date formatting
export const formatDate = (date: Date) =>
  new Intl.DateTimeFormat('nl-NL', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
```

---

## **🧪 REQUIRED FEATURES & FUNCTIONALITY**

### **1. Interactive Menu System:**
```tsx
export const InteractiveMenu = () => {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [favoriteItems, setFavoriteItems] = useState<string[]>([]);
  
  return (
    <section className="py-24 bg-sophisticated-cream">
      <div className="container mx-auto px-8">
        <motion.div {...staggerContainer}>
          <motion.div className="text-center mb-16" {...fadeInUp}>
            <p className="font-script text-3xl text-heritage-orange mb-4">
              Culinaire Kunst
            </p>
            <h2 className="text-5xl font-bold text-craft-charcoal mb-6">
              SIGNATURE MENU COLLECTIE
            </h2>
          </motion.div>
          
          {/* Category Filter */}
          <motion.div 
            className="flex flex-wrap justify-center gap-4 mb-16"
            {...fadeInUp({ delay: 0.2 })}
          >
            {categories.map((category) => (
              <MagneticButton
                key={category.id}
                variant={selectedCategory === category.id ? "primary" : "outline"}
                onClick={() => setSelectedCategory(category.id)}
              >
                {category.name}
              </MagneticButton>
            ))}
          </motion.div>
          
          {/* Menu Grid */}
          <AnimatePresence mode="wait">
            <motion.div
              key={selectedCategory}
              className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-8"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
            >
              {filteredMenuItems.map((item, index) => (
                <MenuItemCard
                  key={item.id}
                  item={item}
                  index={index}
                  isFavorite={favoriteItems.includes(item.id)}
                  onToggleFavorite={(id) => {
                    setFavoriteItems(prev => 
                      prev.includes(id) 
                        ? prev.filter(favId => favId !== id)
                        : [...prev, id]
                    );
                  }}
                />
              ))}
            </motion.div>
          </AnimatePresence>
        </motion.div>
      </div>
    </section>
  );
};
```

### **2. Advanced Contact Form:**
```tsx
export const ContactForm = () => {
  const [step, setStep] = useState(1);
  const [formData, setFormData] = useState<ContactFormData>({});
  const [isSubmitting, setIsSubmitting] = useState(false);
  
  const steps = [
    { id: 1, title: "Evenement Details", component: EventDetailsStep },
    { id: 2, title: "Menu Selectie", component: MenuSelectionStep },
    { id: 3, title: "Contact Informatie", component: ContactInfoStep },
    { id: 4, title: "Bevestiging", component: ConfirmationStep }
  ];
  
  return (
    <motion.div
      className="max-w-4xl mx-auto p-8"
      {...pageTransition}
    >
      {/* Progress Indicator */}
      <div className="mb-12">
        <div className="flex justify-between items-center mb-4">
          {steps.map((stepItem, index) => (
            <motion.div
              key={stepItem.id}
              className={cn(
                "flex items-center justify-center w-12 h-12 rounded-full font-bold",
                step >= stepItem.id 
                  ? "bg-heritage-orange text-white" 
                  : "bg-warm-gold/20 text-craft-charcoal"
              )}
              initial={{ scale: 0 }}
              animate={{ scale: 1 }}
              transition={{ delay: index * 0.1 }}
            >
              {stepItem.id}
            </motion.div>
          ))}
        </div>
        
        <motion.div className="h-2 bg-warm-gold/20 rounded-full overflow-hidden">
          <motion.div
            className="h-full bg-heritage-orange"
            initial={{ width: "0%" }}
            animate={{ width: `${(step / steps.length) * 100}%` }}
            transition={{ duration: 0.5 }}
          />
        </motion.div>
      </div>
      
      {/* Form Steps */}
      <AnimatePresence mode="wait">
        <motion.div
          key={step}
          initial={{ opacity: 0, x: 20 }}
          animate={{ opacity: 1, x: 0 }}
          exit={{ opacity: 0, x: -20 }}
          transition={{ duration: 0.3 }}
        >
          {React.createElement(steps[step - 1].component, { 
            formData, 
            setFormData,
            onNext: () => setStep(prev => prev + 1),
            onBack: () => setStep(prev => prev - 1),
            isSubmitting
          })}
        </motion.div>
      </AnimatePresence>
    </motion.div>
  );
};
```

### **3. Image Gallery with Lightbox:**
```tsx
export const ImageGallery = ({ images }: ImageGalleryProps) => {
  const [selectedImage, setSelectedImage] = useState<string | null>(null);
  const [loadedImages, setLoadedImages] = useState(new Set<string>());
  
  return (
    <>
      <motion.div
        className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4"
        {...staggerContainer}
      >
        {images.map((image, index) => (
          <motion.div
            key={image.id}
            className="aspect-square cursor-pointer group"
            onClick={() => setSelectedImage(image.src)}
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            {...fadeInUp({ delay: index * 0.1 })}
          >
            <ProgressiveImage
              src={image.src}
              placeholder={image.placeholder}
              alt={image.alt}
              className="rounded-lg overflow-hidden group-hover:shadow-xl transition-shadow duration-300"
            />
          </motion.div>
        ))}
      </motion.div>
      
      {/* Lightbox */}
      <AnimatePresence>
        {selectedImage && (
          <motion.div
            className="fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            onClick={() => setSelectedImage(null)}
          >
            <motion.img
              src={selectedImage}
              className="max-w-full max-h-full object-contain"
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.8, opacity: 0 }}
              transition={{ duration: 0.3 }}
            />
            
            <motion.button
              className="absolute top-4 right-4 text-white p-2"
              onClick={() => setSelectedImage(null)}
              whileHover={{ scale: 1.1 }}
              whileTap={{ scale: 0.9 }}
            >
              <X className="w-8 h-8" />
            </motion.button>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
};
```

---

## **🔧 DEPLOYMENT & INFRASTRUCTURE REQUIREMENTS**

### **Next.js 15 Configuration:**
```javascript
/** @type {import('next').NextConfig} */
const nextConfig = {
  experimental: {
    optimizeCss: true,
    turbo: {
      rules: {
        '*.svg': {
          loaders: ['@svgr/webpack'],
          as: '*.js',
        },
      },
    },
  },
  images: {
    formats: ['image/avif', 'image/webp'],
    deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
    imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
  },
  async headers() {
    return [
      {
        source: '/(.*)',
        headers: [
          {
            key: 'X-Frame-Options',
            value: 'DENY',
          },
          {
            key: 'X-Content-Type-Options',
            value: 'nosniff',
          },
          {
            key: 'Referrer-Policy',
            value: 'origin-when-cross-origin',
          },
        ],
      },
    ];
  },
};

module.exports = nextConfig;
```

### **Performance Monitoring:**
```tsx
// Core Web Vitals monitoring
export const performanceMonitoring = {
  reportWebVitals: (metric: any) => {
    console.log(metric);
    
    // Send to analytics
    gtag('event', metric.name, {
      value: Math.round(metric.name === 'CLS' ? metric.value * 1000 : metric.value),
      event_label: metric.id,
      non_interaction: true,
    });
  },
  
  // Performance budget alerts
  budgetThresholds: {
    LCP: 1200, // ms
    FID: 50,   // ms
    CLS: 0.05, // score
    TTFB: 200  // ms
  }
};
```

---

## **✅ FINAL DELIVERY REQUIREMENTS**

### **MANDATORY DELIVERABLES:**

1. **Complete Next.js 15 Project** with all components implemented
2. **Production-ready deployment** configuration
3. **Performance report** showing Core Web Vitals compliance
4. **Accessibility audit** confirming WCAG 2.2 AA compliance
5. **Dutch localization** complete with proper formatting
6. **SEO optimization** with meta tags and structured data
7. **Security headers** and best practices implemented
8. **Analytics integration** with performance monitoring

### **FILE STRUCTURE:**
```
wesley-ambacht/
├── app/
│   ├── globals.css
│   ├── layout.tsx
│   ├── page.tsx
│   ├── (pages)/
│   │   ├── services/
│   │   ├── gallery/
│   │   ├── contact/
│   │   └── about/
├── components/
│   ├── ui/ (shadcn/ui components)
│   ├── layout/ (header, footer, navigation)
│   ├── sections/ (hero, services, gallery)
│   └── forms/ (contact, booking)
├── lib/
│   ├── utils.ts
│   ├── animations.ts
│   ├── constants.ts
│   └── types.ts
├── public/
│   ├── images/
│   └── icons/
└── styles/
    └── globals.css
```

### **QUALITY GATES:**
- ✅ Lighthouse score 95+ across all categories
- ✅ WCAG 2.2 AA compliance verified
- ✅ Mobile-first responsive design
- ✅ Core Web Vitals pass all thresholds
- ✅ Cross-browser compatibility (Chrome, Firefox, Safari, Edge)
- ✅ SEO score 100/100
- ✅ Security headers implemented
- ✅ Dutch localization complete

---

## **🚨 CRITICAL SUCCESS CRITERIA**

### **THIS IS NOT A DEMO - THIS IS PRODUCTION**

You must deliver a **COMPLETE, PRODUCTION-READY** website that:

1. **Perfectly matches Soprano's layout** with the exact hero section, navigation pills, and visual hierarchy
2. **Implements every single component** mentioned in this prompt with full functionality
3. **Exceeds industry performance standards** with sub-1.2s load times
4. **Meets all accessibility requirements** for legal compliance
5. **Includes comprehensive Dutch content** with proper localization
6. **Provides exceptional user experience** that converts visitors to customers

### **FAILURE TO DELIVER ANY COMPONENT = UNACCEPTABLE**

This prompt represents the **ULTIMATE STANDARD** for modern web development. Execute with precision, attention to detail, and uncompromising quality.

---

**🎯 YOUR MISSION: Create the most exceptional artisanal catering website that has ever been built. Make it so extraordinary that it becomes the new standard for the industry.**

**⚡ EXECUTE NOW WITH ABSOLUTE PRECISION.**