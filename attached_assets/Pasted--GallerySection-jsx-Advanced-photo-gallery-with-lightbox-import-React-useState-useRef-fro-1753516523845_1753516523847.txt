// GallerySection.jsx - Advanced photo gallery with lightbox
import React, { useState, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import Image from 'next/image';
import { X, ChevronLeft, ChevronRight, ZoomIn, Grid, Camera } from 'lucide-react';
import { useInView } from 'react-intersection-observer';

const galleryCategories = [
  { id: 'all', name: 'All Events', count: 48 },
  { id: 'weddings', name: 'Weddings', count: 18 },
  { id: 'corporate', name: 'Corporate', count: 12 },
  { id: 'social', name: 'Social Events', count: 10 },
  { id: 'bbq', name: 'BBQ & Grill', count: 8 }
];

const galleryImages = [
  {
    id: 1,
    src: '/gallery/wedding-table-setup.jpg',
    category: 'weddings',
    title: 'Elegant Wedding Reception',
    description: 'Beautifully decorated tables for 200 guests'
  },
  {
    id: 2,
    src: '/gallery/corporate-buffet.jpg',
    category: 'corporate',
    title: 'Executive Lunch Buffet',
    description: 'Premium corporate catering setup'
  },
  // Add more images...
];

const GallerySection = () => {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedImage, setSelectedImage] = useState(null);
  const [lightboxOpen, setLightboxOpen] = useState(false);
  const { ref, inView } = useInView({ threshold: 0.1, triggerOnce: true });

  const filteredImages = selectedCategory === 'all' 
    ? galleryImages 
    : galleryImages.filter(img => img.category === selectedCategory);

  const openLightbox = (image) => {
    setSelectedImage(image);
    setLightboxOpen(true);
    document.body.style.overflow = 'hidden';
  };

  const closeLightbox = () => {
    setLightboxOpen(false);
    setSelectedImage(null);
    document.body.style.overflow = 'unset';
  };

  const navigateImage = (direction) => {
    const currentIndex = filteredImages.findIndex(img => img.id === selectedImage.id);
    let newIndex;
    
    if (direction === 'next') {
      newIndex = currentIndex === filteredImages.length - 1 ? 0 : currentIndex + 1;
    } else {
      newIndex = currentIndex === 0 ? filteredImages.length - 1 : currentIndex - 1;
    }
    
    setSelectedImage(filteredImages[newIndex]);
  };

  return (
    <section ref={ref} className="py-24 bg-gray-50">
      <div className="container mx-auto px-4">
        {/* Section Header */}
        <motion.div 
          className="text-center mb-12"
          initial={{ opacity: 0, y: 30 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8 }}
        >
          <span className="inline-flex items-center gap-2 text-amber-600 font-medium tracking-wider uppercase text-sm mb-4">
            <Camera className="w-5 h-5" />
            Gallery
            <Camera className="w-5 h-5" />
          </span>
          <h2 className="text-5xl md:text-6xl font-serif text-gray-900 mb-6">
            Captured Moments of Excellence
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Browse through our portfolio of beautifully catered events and get inspired for your special occasion
          </p>
        </motion.div>

        {/* Category Filter */}
        <motion.div 
          className="flex flex-wrap justify-center gap-4 mb-12"
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8, delay: 0.2 }}
        >
          {galleryCategories.map((category) => (
            <button
              key={category.id}
              onClick={() => setSelectedCategory(category.id)}
              className={`px-6 py-3 rounded-full font-medium transition-all ${
                selectedCategory === category.id
                  ? 'bg-amber-500 text-white shadow-lg'
                  : 'bg-white text-gray-700 hover:bg-gray-100 shadow-md'
              }`}
            >
              {category.name}
              <span className="ml-2 text-sm opacity-70">({category.count})</span>
            </button>
          ))}
        </motion.div>

        {/* Gallery Grid */}
        <motion.div 
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6"
          initial={{ opacity: 0 }}
          animate={inView ? { opacity: 1 } : {}}
          transition={{ duration: 0.8, delay: 0.4 }}
        >
          <AnimatePresence mode="popLayout">
            {filteredImages.map((image, index) => (
              <motion.div
                key={image.id}
                layout
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                exit={{ opacity: 0, scale: 0.8 }}
                transition={{ duration: 0.3, delay: index * 0.05 }}
                whileHover={{ y: -8 }}
                className="group cursor-pointer"
                onClick={() => openLightbox(image)}
              >
                <div className="relative overflow-hidden rounded-xl shadow-lg aspect-[4/3]">
                  <Image
                    src={image.src}
                    alt={image.title}
                    fill
                    className="object-cover transition-transform duration-500 group-hover:scale-110"
                    sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 25vw"
                  />
                  <div className="absolute inset-0 bg-gradient-to-t from-black/70 via-black/0 to-black/0 opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                  
                  {/* Overlay Content */}
                  <div className="absolute bottom-0 left-0 right-0 p-4 text-white transform translate-y-full group-hover:translate-y-0 transition-transform duration-300">
                    <h3 className="font-semibold text-lg mb-1">{image.title}</h3>
                    <p className="text-sm opacity-90">{image.description}</p>
                  </div>
                  
                  {/* Zoom Icon */}
                  <div className="absolute top-4 right-4 w-10 h-10 bg-white/90 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                    <ZoomIn className="w-5 h-5 text-gray-900" />
                  </div>
                </div>
              </motion.div>
            ))}
          </AnimatePresence>
        </motion.div>

        {/* View All Button */}
        <motion.div 
          className="text-center mt-12"
          initial={{ opacity: 0, y: 30 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8, delay: 0.6 }}
        >
          <button className="inline-flex items-center gap-2 px-8 py-4 bg-gray-900 text-white rounded-full font-semibold hover:bg-gray-800 transition-all hover:scale-105 hover:shadow-xl">
            <Grid className="w-5 h-5" />
            View Full Gallery
          </button>
        </motion.div>
      </div>

      {/* Lightbox */}
      <AnimatePresence>
        {lightboxOpen && selectedImage && (
          <Lightbox
            image={selectedImage}
            onClose={closeLightbox}
            onNavigate={navigateImage}
          />
        )}
      </AnimatePresence>
    </section>
  );
};

// Lightbox Component
const Lightbox = ({ image, onClose, onNavigate }) => {
  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      className="fixed inset-0 z-50 bg-black/95 backdrop-blur-sm"
      onClick={onClose}
    >
      <div className="relative h-full flex items-center justify-center p-4">
        {/* Close Button */}
        <button
          onClick={onClose}
          className="absolute top-4 right-4 p-3 bg-white/10 backdrop-blur-sm rounded-full text-white hover:bg-white/20 transition-colors z-50"
        >
          <X className="w-6 h-6" />
        </button>

        {/* Navigation Buttons */}
        <button
          onClick={(e) => { e.stopPropagation(); onNavigate('prev'); }}
          className="absolute left-4 p-3 bg-white/10 backdrop-blur-sm rounded-full text-white hover:bg-white/20 transition-colors"
        >
          <ChevronLeft className="w-6 h-6" />
        </button>
        
        <button
          onClick={(e) => { e.stopPropagation(); onNavigate('next'); }}
          className="absolute right-4 p-3 bg-white/10 backdrop-blur-sm rounded-full text-white hover:bg-white/20 transition-colors"
        >
          <ChevronRight className="w-6 h-6" />
        </button>

        {/* Image Container */}
        <motion.div
          initial={{ scale: 0.8, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          exit={{ scale: 0.8, opacity: 0 }}
          transition={{ type: "spring", damping: 25, stiffness: 150 }}
          className="relative max-w-6xl max-h-[85vh] w-full h-full"
          onClick={(e) => e.stopPropagation()}
        >
          <Image
            src={image.src}
            alt={image.title}
            fill
            className="object-contain"
            sizes="100vw"
            priority
          />
          
          {/* Image Info */}
          <div className="absolute bottom-0 left-0 right-0 p-6 bg-gradient-to-t from-black/80 to-transparent text-white">
            <h3 className="text-2xl font-semibold mb-2">{image.title}</h3>
            <p className="text-lg opacity-90">{image.description}</p>
          </div>
        </motion.div>
      </div>
    </motion.div>
  );
};

// TestimonialsSection.jsx - Premium testimonials carousel
const TestimonialsSection = () => {
  const [activeIndex, setActiveIndex] = useState(0);
  const { ref, inView } = useInView({ threshold: 0.1, triggerOnce: true });

  const testimonials = [
    {
      id: 1,
      name: "Sarah & Michael Chen",
      event: "Wedding Reception",
      date: "October 2023",
      rating: 5,
      image: "/testimonials/sarah-michael.jpg",
      text: "Wesley's Ambacht exceeded every expectation for our wedding. The food was absolutely divine, and their attention to detail was impeccable. Our guests are still talking about the meal!",
      highlight: "Best wedding caterer in the region!"
    },
    {
      id: 2,
      name: "David Richardson",
      role: "CEO, TechCorp Industries",
      event: "Corporate Gala",
      date: "December 2023",
      rating: 5,
      image: "/testimonials/david-richardson.jpg",
      text: "For our annual company gala, Wesley's Ambacht delivered a world-class dining experience. Professional, elegant, and absolutely delicious. They made our event truly memorable.",
      highlight: "World-class corporate catering"
    },
    {
      id: 3,
      name: "Emily Thompson",
      event: "50th Birthday Celebration",
      date: "August 2023",
      rating: 5,
      image: "/testimonials/emily-thompson.jpg",
      text: "The BBQ spread for my husband's surprise party was phenomenal! The on-site grilling added such a special touch, and everyone loved the variety of options.",
      highlight: "Incredible BBQ experience!"
    }
  ];

  const nextTestimonial = () => {
    setActiveIndex((prev) => (prev + 1) % testimonials.length);
  };

  const prevTestimonial = () => {
    setActiveIndex((prev) => (prev - 1 + testimonials.length) % testimonials.length);
  };

  useEffect(() => {
    const interval = setInterval(nextTestimonial, 6000);
    return () => clearInterval(interval);
  }, []);

  return (
    <section ref={ref} className="py-24 bg-gradient-to-br from-amber-50 to-orange-50">
      <div className="container mx-auto px-4">
        {/* Section Header */}
        <motion.div 
          className="text-center mb-16"
          initial={{ opacity: 0, y: 30 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8 }}
        >
          <span className="inline-flex items-center gap-2 text-amber-600 font-medium tracking-wider uppercase text-sm mb-4">
            <Sparkles className="w-5 h-5" />
            Testimonials
            <Sparkles className="w-5 h-5" />
          </span>
          <h2 className="text-5xl md:text-6xl font-serif text-gray-900 mb-6">
            Words from Our Delighted Clients
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Don't just take our word for it - hear what our clients have to say about their experience with Wesley's Ambacht
          </p>
        </motion.div>

        {/* Testimonials Carousel */}
        <motion.div 
          className="relative max-w-5xl mx-auto"
          initial={{ opacity: 0 }}
          animate={inView ? { opacity: 1 } : {}}
          transition={{ duration: 0.8, delay: 0.2 }}
        >
          <div className="relative overflow-hidden rounded-2xl bg-white shadow-xl">
            <AnimatePresence mode="wait">
              <motion.div
                key={activeIndex}
                initial={{ opacity: 0, x: 100 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -100 }}
                transition={{ duration: 0.5, ease: "easeInOut" }}
                className="p-8 md:p-12"
              >
                <div className="grid md:grid-cols-3 gap-8 items-center">
                  {/* Client Image */}
                  <div className="md:col-span-1">
                    <div className="relative w-48 h-48 mx-auto rounded-full overflow-hidden shadow-xl">
                      <Image
                        src={testimonials[activeIndex].image}
                        alt={testimonials[activeIndex].name}
                        fill
                        className="object-cover"
                      />
                    </div>
                    <div className="text-center mt-4">
                      <div className="flex justify-center mb-2">
                        {[...Array(5)].map((_, i) => (
                          <span key={i} className="text-amber-400 text-xl">★</span>
                        ))}
                      </div>
                      <p className="text-sm text-gray-600">{testimonials[activeIndex].event}</p>
                      <p className="text-xs text-gray-500">{testimonials[activeIndex].date}</p>
                    </div>
                  </div>

                  {/* Testimonial Content */}
                  <div className="md:col-span-2">
                    <div className="relative">
                      <span className="absolute -top-4 -left-4 text-6xl text-amber-200 font-serif">"</span>
                      <p className="text-lg md:text-xl text-gray-700 leading-relaxed mb-6 italic">
                        {testimonials[activeIndex].text}
                      </p>
                      <div className="bg-amber-100 border-l-4 border-amber-500 p-4 mb-6">
                        <p className="font-semibold text-amber-900">
                          {testimonials[activeIndex].highlight}
                        </p>
                      </div>
                      <div>
                        <p className="font-semibold text-xl text-gray-900">
                          {testimonials[activeIndex].name}
                        </p>
                        {testimonials[activeIndex].role && (
                          <p className="text-gray-600">{testimonials[activeIndex].role}</p>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              </motion.div>
            </AnimatePresence>

            {/* Navigation */}
            <div className="absolute bottom-4 right-4 flex gap-2">
              <button
                onClick={prevTestimonial}
                className="p-2 bg-amber-500/10 hover:bg-amber-500/20 rounded-lg transition-colors"
              >
                <ChevronLeft className="w-5 h-5 text-amber-700" />
              </button>
              <button
                onClick={nextTestimonial}
                className="p-2 bg-amber-500/10 hover:bg-amber-500/20 rounded-lg transition-colors"
              >
                <ChevronRight className="w-5 h-5 text-amber-700" />
              </button>
            </div>
          </div>

          {/* Dots Indicator */}
          <div className="flex justify-center mt-6 gap-2">
            {testimonials.map((_, index) => (
              <button
                key={index}
                onClick={() => setActiveIndex(index)}
                className={`w-2 h-2 rounded-full transition-all ${
                  index === activeIndex 
                    ? 'w-8 bg-amber-500' 
                    : 'bg-gray-300 hover:bg-gray-400'
                }`}
              />
            ))}
          </div>
        </motion.div>

        {/* Trust Badges */}
        <motion.div 
          className="mt-16 grid grid-cols-2 md:grid-cols-4 gap-8"
          initial={{ opacity: 0, y: 30 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8, delay: 0.4 }}
        >
          {[
            { value: "500+", label: "Five Star Reviews" },
            { value: "10K+", label: "Events Catered" },
            { value: "98%", label: "Client Satisfaction" },
            { value: "30+", label: "Years Experience" }
          ].map((stat, index) => (
            <div key={index} className="text-center">
              <div className="text-4xl font-bold text-amber-600 mb-2">{stat.value}</div>
              <div className="text-gray-600">{stat.label}</div>
            </div>
          ))}
        </motion.div>
      </div>
    </section>
  );
};

export { GallerySection, TestimonialsSection };